AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to deploy a Node.js app on AWS ECS with EC2 launch type'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC ID
    Default: vpc-0d10393a33604e714

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select at least two subnets in different AZs
    Default: subnet-01d80ff00b2e4cee6,subnet-0e23ea4a450f914b4

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: nodejs-cluster

  # IAM Role for ECS Task Execution
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecsTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: ecsTaskExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                Resource: '*'

  # Security Group for ECS Tasks
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound traffic to ECS tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  # ECS Task Definition (Updated for EC2)
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: nodejs-task
      NetworkMode: bridge  # Updated for EC2
      RequiresCompatibilities: [EC2]  # Changed from Fargate
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: nodejs-app
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/ecs-nodejs-repo:latest"
          Memory: 512
          Cpu: 256
          Essential: true
          PortMappings:
            - ContainerPort: 3000

  # ECS Service (Updated for EC2)
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: nodejs-service
      LaunchType: EC2  # Changed from FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:  # Removed AwsvpcConfiguration since EC2 does not require it
        AwsvpcConfiguration:
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref ECSSecurityGroup
          AssignPublicIp: DISABLED

Outputs:
  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster

  ECSTaskExecutionRole:
    Description: IAM Role for ECS Task Execution
    Value: !GetAtt ECSTaskExecutionRole.Arn